/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface VestingFactoryInterface extends ethers.utils.Interface {
  functions: {
    "createVesting(address,bytes32,bytes,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createVesting",
    values: [string, BytesLike, BytesLike, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createVesting",
    data: BytesLike
  ): Result;

  events: {
    "VestingCreated(address,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "VestingCreated"): EventFragment;
}

export class VestingFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: VestingFactoryInterface;

  functions: {
    "createVesting(address,bytes32,bytes,address,uint256)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createVesting(address,bytes32,bytes)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  "createVesting(address,bytes32,bytes,address,uint256)"(
    _implementation: string,
    _salt: BytesLike,
    _data: BytesLike,
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createVesting(address,bytes32,bytes)"(
    _implementation: string,
    _salt: BytesLike,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    "createVesting(address,bytes32,bytes,address,uint256)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createVesting(address,bytes32,bytes)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    VestingCreated(_address: string | null, _salt: null): EventFilter;
  };

  estimateGas: {
    "createVesting(address,bytes32,bytes,address,uint256)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createVesting(address,bytes32,bytes)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    "createVesting(address,bytes32,bytes,address,uint256)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createVesting(address,bytes32,bytes)"(
      _implementation: string,
      _salt: BytesLike,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
